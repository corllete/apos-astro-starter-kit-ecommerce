---
interface Props {
  label?: string;
  className?: string;
  full?: boolean;
  large?: boolean;
  disabled?: boolean;
  onDark?: boolean;
  mobileInverse?: boolean;
  type?: "filled" | "outlined";
  href?: string;
}
const {
  href,
  label,
  type = "filled",
  className = "",
  full = false,
  large = false,
  disabled = false,
  onDark = false,
  mobileInverse = false,
} = Astro.props;

let state =
  " text-white border border-brand bg-brand hover:bg-brand-700 hover:border-brand-700 active:bg-brand-700 active:border-brand-700 disabled:bg-brand-100 disabled:text-gray-400 disabled:border-brand-100 transition-color duration-150";
if (type === "outlined") {
  state =
    " bg-transparent border hover:outline hover:outline-2 active:outline active:outline-2 disabled:text-gray-400 disabled:border disabled:border-gray-200 disabled:outline-none disabled:ring-0";
  if (mobileInverse) {
    state +=
      " text-white border-gray-50 hover:outline-gray-50 active:outline-gray-50 lg:text-gray-800 lg:border-gray-500 lg:hover:outline-gray-500 lg:active:outline-gray-500";
  } else {
    state +=
      " text-gray-800 border-gray-500 hover:outline-gray-500 active:outline-gray-500";
  }
  if (onDark) {
    state =
      " bg-transparent border hover:outline hover:outline-2 active:outline active:outline-2 disabled:text-gray-400 disabled:border disabled:border-gray-200 disabled:outline-none disabled:ring-0";
    if (mobileInverse) {
      state +=
        " text-gray-800 border-gray-500 hover:outline-gray-500 active:outline-gray-500 lg:text-white lg:border-gray-50 lg:hover:outline-gray-50 lg:active:outline-gray-50";
    } else {
      state +=
        " text-white border-gray-50 hover:outline-gray-50 active:outline-gray-50";
    }
  }
}
let fullCss = full ? " w-full" : "";
let largeCss = large ? " text-2xl px-6 py-4" : " text-base px-4 py-2";
let disabledCss = disabled ? " disabled" : "";
const css = `inline-block text-center rounded-md leading-6 ${state}${largeCss}${fullCss}${disabledCss}`;
---

{
  href ? (
    <a href={href} class:list={[css, className]}>
      <span class="whitespace-nowrap max-w-[60ch] overflow-hidden font-medium">
        <slot>{label}</slot>
      </span>
    </a>
  ) : (
    <button class:list={[css, className]}>
      <span class="whitespace-nowrap max-w-[60ch] overflow-hidden font-medium">
        <slot>{label}</slot>
      </span>
    </button>
  )
}
